# Use root/example as user/password credentials
version: '3.1'

services:

    redis:
        image: redis:latest
        restart: always
        ports:
            - 16379:6379

    db:
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        volumes:
            - ./data/mysql:/var/lib/mysql
        ports:
            - 56666:3306
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: okr
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_ROOT_HOST: '%'
    web:
        image: fholzer/nginx-brotli
        restart: always
        volumes:
            - ./build:/data/web
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/vhosts:/etc/nginx/vhosts
            - ./nginx/logs:/etc/nginx/logs
            - ./nginx/ssl:/etc/nginx/ssl
            - ./www:/var/www/html
        ports:
            - "8999:80"
        expose:
            - "8999"
        networks:
            - backend

    mongodb:
        image: mongo:latest
        container_name: "mongodb"
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_LOG_DIR=/dev/null
        volumes:
            - ./data/mongo:/data/db
        ports:
            - 27017:27017
        command: mongod --smallfiles --logpath=/dev/null # --quiet
    
    php:
        build:
            context: ./php
            dockerfile: Dockerfile
        image: gakaki.com/php
        container_name: php
        volumes:
            - ./www:/var/www/html
            - ./php/etc:/usr/local/etc
            - ./php/log:/var/log/php
        ports:
            - 39999:9999
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: php
            SERVICE_TAGS: dev
        networks:
            - backend
      
networks:
  backend:
    driver: bridge